#!/bin/sh
#
# otsdaq_convert_artdaq_daq_tables
# 	Script to convert artdaq 'daq' tables in User Database
#		to without daq in name
#
#	The thinking is that table name is less redundant.
#
#


START_DIR=${PWD}

echo
echo
echo -e `date +"%h%y %T"` "convert_artdaq_daq_tables.sh [${LINENO}]  \t Do not source this script, run it as 'otsdaq_convert_artdaq_daq_tables'"
echo -e `date +"%h%y %T"` "convert_artdaq_daq_tables.sh [${LINENO}]  \t You must have USER_DATA and ARTDAQ_DATABASE_URI environment variables setup. They are usually setup when you setup otsdaq."
return  >/dev/null 2>&1 #return is used if script is sourced

echo
echo	
echo -e `date +"%h%y %T"` "convert_artdaq_daq_tables.sh [${LINENO}]  \t Checking environment..."
		
if [[ "x$USER_DATA" == "x" ]]; then
	echo -e `date +"%h%y %T"` "convert_artdaq_daq_tables.sh [${LINENO}]  \t USER_DATA environment variable must be setup. Is your ots instance setup?"
	exit
fi
	
TABLE_DIR=$USER_DATA/TableInfo
if [ ! -d $TABLE_DIR ]; then
	echo -e `date +"%h%y %T"` "convert_artdaq_daq_tables.sh [${LINENO}]  \t TABLE_DIR=${TABLE_DIR} path does not exists. Is your ots instance setup?"
	exit
fi

echo
echo

ARTDAQ_DATABASE_DIR=`echo ${ARTDAQ_DATABASE_URI}|sed 's|.*//|/|'`	


if [[ "x$ARTDAQ_DATABASE_DIR" == "x" ]]; then
	echo -e `date +"%h%y %T"` "convert_artdaq_daq_tables.sh [${LINENO}]  \t ARTDAQ_DATABASE_URI environment variable must be setup. Is your ots instance setup?"
	exit
fi

if [ ! -d $ARTDAQ_DATABASE_DIR ]; then
	echo -e `date +"%h%y %T"` "convert_artdaq_daq_tables.sh [${LINENO}]  \t ARTDAQ_DATABASE_URI environment variable must be setup. Is your ots instance setup?"
	exit
fi


echo -e `date +"%h%y %T"` "convert_artdaq_daq_tables.sh [${LINENO}]  \t USER_DATA=${USER_DATA}"
echo -e `date +"%h%y %T"` "convert_artdaq_daq_tables.sh [${LINENO}]  \t TABLE_DIR=${TABLE_DIR}"
echo
echo -e `date +"%h%y %T"` "convert_artdaq_daq_tables.sh [${LINENO}]  \t ARTDAQ_DATABASE_URI=${ARTDAQ_DATABASE_URI}"
echo -e `date +"%h%y %T"` "convert_artdaq_daq_tables.sh [${LINENO}]  \t ARTDAQ_DATABASE_DIR=${ARTDAQ_DATABASE_DIR}"

###########
#=====================================
###########	USER DATA conversion
echo
echo
echo -e `date +"%h%y %T"` "convert_artdaq_daq_tables.sh [${LINENO}]  \t Converting artdaq 'daq' tables..."

echo

#rename ARTDAQDaq* to ARTDAQ*

cd $TABLE_DIR

echo -e `date +"%h%y %T"` "convert_artdaq_daq_tables.sh [${LINENO}]  \t Modifying Table Info file content..."
sed -i s/ARTDAQDaq/ARTDAQ/g *.xml
sed -i s/ARTDAQ_DAQ/ARTDAQ/g *.xml

echo -e `date +"%h%y %T"` "convert_artdaq_daq_tables.sh [${LINENO}]  \t Renaming Table Info files..."
  
for f in ARTDAQDaq*.xml; do [ -f "$f" ] && mv -- "$f" "${f/ARTDAQDaq/ARTDAQ}"; echo $f; done; 



###########
#=====================================
###########	USER DATABASE conversion

echo

cd $ARTDAQ_DATABASE_DIR

echo -e `date +"%h%y %T"` "convert_artdaq_daq_tables.sh [${LINENO}]  \t Modifying Table database folders..."

#delete the destination location of ARTDAQDaq* and then move the ARTDAQDaq* to ARTDAQ*
for f in ARTDAQDaq*; do [ -f "$f" ]; rm -rf "${f/ARTDAQDaq/ARTDAQ}"; mv -- "$f" "${f/ARTDAQDaq/ARTDAQ}"; echo $f; done;
#for f in ARTDAQDaq*; do [ -f "$f" ]; mv -- "${f/ARTDAQDaq/ARTDAQ}" "${f/ARTDAQDaq/ARTDAQ}.bad"; mv -- "$f" "${f/ARTDAQDaq/ARTDAQ}"; echo $f; done; 

#hide index from transformation
for f in *Table; do mv -n "$f/index.json" "$f/index.txt"; done; 

sed -i s/ARTDAQDaq/ARTDAQ/g *Table/*.json #*/ end C++ comment coloring
sed -i s/ARTDAQ_DAQ/ARTDAQ/g *Table/*.json #*/ end C++ comment coloring

#return index after transformation
for f in *Table; do mv -n "$f/index.txt" "$f/index.json"; done; 

#convert TheSupervisor to GatewaySupervisor
echo -e `date +"%h%y %T"` "convert_artdaq_daq_tables.sh [${LINENO}]  \t Converting TheSupervisor Table to GatewaySupervisor..."
mv TheSupervisorTable GatewaySupervisorTable
sed -i s/TheSupervisor/GatewaySupervisor/g GatewaySupervisorTable/*.json #*/ end C++ comment coloring
sed -i s/THE_SUPERVISOR/GATEWAY_SUPERVISOR/g GatewaySupervisorTable/*.json #*/ end C++ comment coloring
sed -i s/libSupervisor/libGatewaySupervisor/g GatewaySupervisorTable/*.json #*/ end C++ comment coloring
sed -i s/OtsConfigurationWizard/WizardSupervisor/g GatewaySupervisorTable/*.json #*/ end C++ comment coloring

#do same thing for MetaData table
echo -e `date +"%h%y %T"` "convert_artdaq_daq_tables.sh [${LINENO}]  \t Fixing Metadata Table..."

#hide index from transformation
mv TableGroupMetadata/index.json TableGroupMetadata/index.txt

sed -i s/ARTDAQDaq/ARTDAQ/g TableGroupMetadata/*.json #*/ end C++ comment coloring
sed -i s/ARTDAQ_DAQ/ARTDAQ/g TableGroupMetadata/*.json #*/ end C++ comment coloring

#return index after transformation
mv TableGroupMetadata/index.txt TableGroupMetadata/index.json


#done!

cd $START_DIR


echo -e `date +"%h%y %T"` "convert_artdaq_daq_tables.sh [${LINENO}]  \t Done with conversion."


echo
echo
echo
echo